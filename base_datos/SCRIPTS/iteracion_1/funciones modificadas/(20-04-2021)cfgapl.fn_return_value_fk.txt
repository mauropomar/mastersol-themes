CREATE OR REPLACE FUNCTION cfgapl.fn_return_value_fk
(
  IN  id_section  uuid,
  IN  id_rol      uuid
)
RETURNS varchar AS
$$
declare 
result_data varchar[]; res_fk_prop_name record;
res_column record; rec_fks record; rec_json record; table_fk varchar; val varchar;
begin 
      
     FOR rec_fks IN
	 (
		 SELECT tbp.id, (select tfk.name1 from cfgapl.tables_foreignkeys tfk where tfk.id_tables = tb.id 
	    AND array_to_string(tfk.local_fields,',') = tbp.n_column AND tbp.n_column <> 'id') as id_fk_properties
		 --,tbp.id_fk_properties 
		FROM cfgapl.sections sc
		JOIN security.rol_sections rs on (sc.id = rs.id_sections)
		JOIN cfgapl.tables tb on (sc.id_tables = tb.id)		
		JOIN cfgapl.tables_properties tbp on (tbp.id_tables = sc.id_tables) 		
		WHERE sc.id = $1 AND rs.id_rol = $2 
		AND (select count(tfk.id) from cfgapl.tables_foreignkeys tfk where tfk.id_tables = tb.id 
		AND array_to_string(tfk.local_fields,',') = tbp.n_column AND tbp.n_column <> 'id') > 0	
		--AND not tbp.id_fk_tables is null
	) LOOP 
    
    --Aqui se obtiene el id de la columna que hace referencia a la columna que indicara el valor a mostrar en el fk     
    SELECT 
	--tbp.id_fk_properties as id
	--,tbp.id_fk_tables,
	(select tfk.name1 from cfgapl.tables_foreignkeys tfk where tfk.id_tables = tb.id 
	    AND array_to_string(tfk.local_fields,',') = tbp.n_column AND tbp.n_column <> 'id') as id,
	tbp.n_column INTO res_fk_prop_name   
    FROM cfgapl.tables tb
    JOIN cfgapl.tables_properties tbp on (tbp.id_tables = tb.id) 	
    WHERE tbp.id = rec_fks.id;
    
    --Aqui se obtiene la columna que indicara el valor a mostrar en el fk
    SELECT tbp.n_column,tb.n_schema||'.'||tb.n_table as table_fk INTO res_column   
    FROM cfgapl.tables tb
    JOIN cfgapl.tables_properties tbp on (tbp.id_tables = tb.id)
    WHERE tbp.id = res_fk_prop_name.id;
        
    --Aqui se retorna el valor del fk en forma de subconsulta
    IF not rec_fks.id_fk_properties is null THEN
		val = '(SELECT '||res_column.n_column|| ' FROM '||res_column.table_fk||' WHERE id = dat.'|| res_fk_prop_name.n_column ||') as n_'||res_fk_prop_name.n_column;
    ELSE
		val = 'null as n_'||res_fk_prop_name.n_column;
    END IF;
    SELECT array_append(result_data,val) INTO result_data; 
    END LOOP;    
    
    IF array_length(result_data,1) > 0 THEN
     return ',' || array_to_string(result_data, ',', '*');
    ELSE
     return '';
    END IF;
end
$$
LANGUAGE 'plpgsql';

ALTER FUNCTION cfgapl.fn_return_value_fk(uuid, uuid)
  OWNER TO postgres;

COMMENT ON FUNCTION cfgapl.fn_return_value_fk(uuid, uuid)
  IS 'En esta funcion se devuelven los foreign keys de la seccion, ya organizada en una subconsulta. Ejemplo:
(SELECT namex FROM cfgapl.capsules WHERE id = dat.idcapsules) as n_id_capsules';